{"version":3,"sources":["components/SearchBar.js","components/ImageGalleryItem.js","components/ImageGallery.js","API/Fetch.js","components/Modal.js","App.js","index.js"],"names":["SearchBar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmitForm","this","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","images","showModal","map","image","key","id","src","webformatURL","alt","onClick","largeImageURL","ImageGallery","onShowModal","searchQuery","page","fetch","then","response","json","data","hits","Modal","modalEscCloseFunction","code","onCloseModal","modalClickCloseFunction","nodeName","window","addEventListener","removeEventListener","App","img","loading","error","scrollWindow","scrollTo","top","document","documentElement","scrollHeight","behavior","fetchPictures","fetchApi","prevState","catch","finally","handleSearchQuery","query","handleShowModal","prevPrors","color","height","width","timeout","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d4a26fa3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class SearchBar extends Component {\n  state = {\n    inputValue: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({ inputValue: e.target.value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmitForm(this.state.inputValue);\n    this.setState({ inputValue: \"\" });\n  };\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={inputValue}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\n\nfunction ImageGalleryItem({ images, showModal }) {\n  return (\n    <>\n      {images.map((image) => (\n        <li className=\"ImageGalleryItem\" key={image.id}>\n          <img\n            src={image.webformatURL}\n            alt=\"\"\n            className=\"ImageGalleryItem-image\"\n            onClick={() => showModal(image.largeImageURL)}\n          />\n        </li>\n      ))}\n    </>\n  );\n}\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\n\nfunction ImageGallery({ images, onShowModal }) {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        <ImageGalleryItem images={images} showModal={onShowModal} />\n      </ul>\n    </>\n  );\n}\nexport default ImageGallery;\n","const fetchSearchPictures = (searchQuery, page) => {\n  return fetch(\n    `https://pixabay.com/api/?key=17911527-5bdfde13a28c678a168d7ccf7&q=${searchQuery}&per_page=15&page=${page}`\n  ).then((response) => response.json().then((data) => data.hits));\n};\n\nexport default {\n  fetchSearchPictures,\n};\n","import React, { Component } from \"react\";\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.modalEscCloseFunction);\n    window.addEventListener(\"click\", this.modalClickCloseFunction);\n  }\n\n  modalEscCloseFunction = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onCloseModal();\n    }\n  };\n  modalClickCloseFunction = (e) => {\n    if (e.target.nodeName === \"DIV\") {\n      this.props.onCloseModal();\n    }\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.modalEscCloseFunction);\n    window.removeEventListener(\"click\", this.modalClickCloseFunction);\n  }\n  render() {\n    return (\n      <div className=\"Overlay\">\n        <div className=\"Modal\">\n          <img src={this.props.src} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport fetchApi from \"./API/Fetch\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal\";\n\nexport default class App extends Component {\n  state = {\n    img: [],\n    loading: false,\n    error: null,\n    searchQuery: \"\",\n    page: 1,\n    showModal: false,\n    src: \"\",\n  };\n\n  componentDidUpdate(prevPrors, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    if (prevQuery !== nextQuery) {\n      this.fetchPictures();\n      this.scrollWindow();\n    }\n  }\n\n  scrollWindow = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  fetchPictures = () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ loading: true });\n    fetchApi\n      .fetchSearchPictures(searchQuery, page)\n      .then((img) =>\n        this.setState((prevState) => {\n          return { img: [...prevState.img, ...img], page: prevState.page + 1 };\n        })\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n  handleSearchQuery = (query) => {\n    this.setState({ searchQuery: query, img: [], page: 1 });\n  };\n  handleShowModal = (src) => {\n    this.setState({ showModal: true, src: src });\n  };\n  onCloseModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  render() {\n    const { img, loading, showModal, src } = this.state;\n    return (\n      <>\n        <SearchBar onSubmitForm={this.handleSearchQuery} />\n\n        <ImageGallery images={img} onShowModal={this.handleShowModal} />\n\n        {showModal && <Modal src={src} onCloseModal={this.onCloseModal} />}\n\n        {loading && (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        )}\n        {img.length > 0 && (\n          <button type=\"button\" className=\"Button\" onClick={this.fetchPictures}>\n            Load more\n          </button>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}